services:
  # ========================================
  # CORE PROFILE - Essential services only
  # ========================================
  
  # ----------------------------
  # MariaDB (core)
  # ----------------------------
  db:
    image: mariadb:11.4
    container_name: db
    restart: unless-stopped
    env_file:
      - ./env_simple.env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mariadb-admin --skip-ssl ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["core"]

  # ----------------------------
  # WordPress (core)
  # ----------------------------
  wordpress:
    image: wordpress:php8.2-apache
    container_name: wordpress
    restart: unless-stopped
    env_file:
      - ./env_simple.env
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX}
      WORDPRESS_DEBUG: ${WP_DEBUG}
    volumes:
      - wp_data:/var/www/html
    ports:
      - "8080:80"
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    profiles: ["core"]

  # ----------------------------
  # Backup System (core)
  # ----------------------------
  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    container_name: backup
    restart: unless-stopped
    env_file:
      - ./env_simple.env
    environment:
      - BORG_REPO=${BORG_REPO}
      - BORG_PASSPHRASE=${BORG_PASSPHRASE}
      - DB_HOST=${MYSQL_HOST}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - BACKUP_RETENTION_DAILY=${BACKUP_RETENTION_DAILY}
      - BACKUP_RETENTION_WEEKLY=${BACKUP_RETENTION_WEEKLY}
      - BACKUP_RETENTION_MONTHLY=${BACKUP_RETENTION_MONTHLY}
      - BACKUP_SOURCE_PATH=/var/www/html
    volumes:
      - ./backup/repos:/backup/repos
      - ./backup/logs:/backup/logs
      - wp_data:/var/www/html
      - db_data:/var/lib/mysql
    networks:
      - backend
    depends_on:
      - db
      - wordpress
    profiles: ["core"]

  # ========================================
  # OPS PROFILE - Operational services
  # ========================================

  # ----------------------------
  # Complete prep process (ops)
  # ----------------------------
  prep:
    build:
      context: ./backup
      dockerfile: Dockerfile
    container_name: prep
    env_file:
      - ./env_simple.env
    environment:
      - BORG_REPO=${BORG_REPO}
      - BORG_PASSPHRASE=${BORG_PASSPHRASE}
      - DB_HOST=${MYSQL_HOST}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_VOLUME_PATH=/check_db_data
      - WP_VOLUME_PATH=/check_wp_data
      - STATUS_FILE=/tmp/prep_status
    volumes:
      - db_data:/check_db_data
      - wp_data:/check_wp_data
      - ./backup/repos:/backup/repos
      - ./prep:/scripts
    networks:
      - backend
    command:
      - sh
      - /scripts/prep-volumes-only.sh
    restart: "no"
    profiles: ["ops"]

  # ----------------------------
  # WP-CLI (core)
  # ----------------------------
  wpcli:
    image: wordpress:cli
    container_name: wpcli
    env_file:
      - ./env_simple.env
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - wp_data:/var/www/html
      - ./manifests:/manifests
    networks:
      - backend
    depends_on:
      - wordpress
    command: ["tail", "-f", "/dev/null"]
    profiles: ["core"]

volumes:
  db_data:
  wp_data:

networks:
  backend: